# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Sheets.V4.Model.InsertDimensionRequest do
  @moduledoc """
  Inserts rows or columns in a sheet at a particular index.

  ## Attributes

  - inheritFromBefore (boolean()): Whether dimension properties should be extended from the dimensions before or after the newly inserted dimensions. True to inherit from the dimensions before (in which case the start index must be greater than 0), and false to inherit from the dimensions after.  For example, if row index 0 has red background and row index 1 has a green background, then inserting 2 rows at index 1 can inherit either the green or red background.  If &#x60;inheritFromBefore&#x60; is true, the two new rows will be red (because the row before the insertion point was red), whereas if &#x60;inheritFromBefore&#x60; is false, the two new rows will be green (because the row after the insertion point was green). Defaults to: `null`.
  - range (DimensionRange): The dimensions to insert.  Both the start and end indexes must be bounded. Defaults to: `null`.
  """

  @type t :: %__MODULE__{
          inheritFromBefore: any(),
          range: GoogleApi.Sheets.V4.Model.DimensionRange.t()
        }

  defstruct [
    :inheritFromBefore,
    :range
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.InsertDimensionRequest do
  import GoogleApi.Sheets.V4.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:range, :struct, GoogleApi.Sheets.V4.Model.DimensionRange, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.InsertDimensionRequest do
  def encode(value, options) do
    GoogleApi.Sheets.V4.Deserializer.serialize_non_nil(value, options)
  end
end
