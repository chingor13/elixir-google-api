# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Sheets.V4.Model.TreemapChartColorScale do
  @moduledoc """
  A color scale for a treemap chart.

  ## Attributes

  - maxValueColor (Color): The background color for cells with a color value greater than or equal to maxValue. Defaults to #109618 if not specified. Defaults to: `null`.
  - midValueColor (Color): The background color for cells with a color value at the midpoint between minValue and maxValue. Defaults to #efe6dc if not specified. Defaults to: `null`.
  - minValueColor (Color): The background color for cells with a color value less than or equal to minValue. Defaults to #dc3912 if not specified. Defaults to: `null`.
  - noDataColor (Color): The background color for cells that have no color data associated with them. Defaults to #000000 if not specified. Defaults to: `null`.
  """

  @type t :: %__MODULE__{
          maxValueColor: GoogleApi.Sheets.V4.Model.Color.t(),
          midValueColor: GoogleApi.Sheets.V4.Model.Color.t(),
          minValueColor: GoogleApi.Sheets.V4.Model.Color.t(),
          noDataColor: GoogleApi.Sheets.V4.Model.Color.t()
        }

  defstruct [
    :maxValueColor,
    :midValueColor,
    :minValueColor,
    :noDataColor
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.TreemapChartColorScale do
  import GoogleApi.Sheets.V4.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:maxValueColor, :struct, GoogleApi.Sheets.V4.Model.Color, options)
    |> deserialize(:midValueColor, :struct, GoogleApi.Sheets.V4.Model.Color, options)
    |> deserialize(:minValueColor, :struct, GoogleApi.Sheets.V4.Model.Color, options)
    |> deserialize(:noDataColor, :struct, GoogleApi.Sheets.V4.Model.Color, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.TreemapChartColorScale do
  def encode(value, options) do
    GoogleApi.Sheets.V4.Deserializer.serialize_non_nil(value, options)
  end
end
