# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Sheets.V4.Model.BatchUpdateValuesResponse do
  @moduledoc """
  The response when updating a range of values in a spreadsheet.

  ## Attributes

  - responses ([UpdateValuesResponse]): One UpdateValuesResponse per requested range, in the same order as the requests appeared. Defaults to: `null`.
  - spreadsheetId (String.t): The spreadsheet the updates were applied to. Defaults to: `null`.
  - totalUpdatedCells (integer()): The total number of cells updated. Defaults to: `null`.
  - totalUpdatedColumns (integer()): The total number of columns where at least one cell in the column was updated. Defaults to: `null`.
  - totalUpdatedRows (integer()): The total number of rows where at least one cell in the row was updated. Defaults to: `null`.
  - totalUpdatedSheets (integer()): The total number of sheets where at least one cell in the sheet was updated. Defaults to: `null`.
  """

  @type t :: %__MODULE__{
          responses: list(GoogleApi.Sheets.V4.Model.UpdateValuesResponse.t()),
          spreadsheetId: any(),
          totalUpdatedCells: any(),
          totalUpdatedColumns: any(),
          totalUpdatedRows: any(),
          totalUpdatedSheets: any()
        }

  defstruct [
    :responses,
    :spreadsheetId,
    :totalUpdatedCells,
    :totalUpdatedColumns,
    :totalUpdatedRows,
    :totalUpdatedSheets
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.BatchUpdateValuesResponse do
  import GoogleApi.Sheets.V4.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:responses, :list, GoogleApi.Sheets.V4.Model.UpdateValuesResponse, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.BatchUpdateValuesResponse do
  def encode(value, options) do
    GoogleApi.Sheets.V4.Deserializer.serialize_non_nil(value, options)
  end
end
