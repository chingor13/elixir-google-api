# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Sheets.V4.Model.MoveDimensionRequest do
  @moduledoc """
  Moves one or more rows or columns.

  ## Attributes

  - destinationIndex (integer()): The zero-based start index of where to move the source data to, based on the coordinates *before* the source data is removed from the grid.  Existing data will be shifted down or right (depending on the dimension) to make room for the moved dimensions. The source dimensions are removed from the grid, so the the data may end up in a different index than specified.  For example, given &#x60;A1..A5&#x60; of &#x60;0, 1, 2, 3, 4&#x60; and wanting to move &#x60;\&quot;1\&quot;&#x60; and &#x60;\&quot;2\&quot;&#x60; to between &#x60;\&quot;3\&quot;&#x60; and &#x60;\&quot;4\&quot;&#x60;, the source would be &#x60;ROWS [1..3)&#x60;,and the destination index would be &#x60;\&quot;4\&quot;&#x60; (the zero-based index of row 5). The end result would be &#x60;A1..A5&#x60; of &#x60;0, 3, 1, 2, 4&#x60;. Defaults to: `null`.
  - source (DimensionRange): The source dimensions to move. Defaults to: `null`.
  """

  @type t :: %__MODULE__{
          destinationIndex: any(),
          source: GoogleApi.Sheets.V4.Model.DimensionRange.t()
        }

  defstruct [
    :destinationIndex,
    :source
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.MoveDimensionRequest do
  import GoogleApi.Sheets.V4.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:source, :struct, GoogleApi.Sheets.V4.Model.DimensionRange, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.MoveDimensionRequest do
  def encode(value, options) do
    GoogleApi.Sheets.V4.Deserializer.serialize_non_nil(value, options)
  end
end
