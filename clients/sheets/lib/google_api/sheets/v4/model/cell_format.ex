# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Sheets.V4.Model.CellFormat do
  @moduledoc """
  The format of a cell.

  ## Attributes

  - backgroundColor (Color): The background color of the cell. Defaults to: `null`.
  - borders (Borders): The borders of the cell. Defaults to: `null`.
  - horizontalAlignment (String.t): The horizontal alignment of the value in the cell. Defaults to: `null`.
    - Enum - one of [HORIZONTAL_ALIGN_UNSPECIFIED, LEFT, CENTER, RIGHT]
  - hyperlinkDisplayType (String.t): How a hyperlink, if it exists, should be displayed in the cell. Defaults to: `null`.
    - Enum - one of [HYPERLINK_DISPLAY_TYPE_UNSPECIFIED, LINKED, PLAIN_TEXT]
  - numberFormat (NumberFormat): A format describing how number values should be represented to the user. Defaults to: `null`.
  - padding (Padding): The padding of the cell. Defaults to: `null`.
  - textDirection (String.t): The direction of the text in the cell. Defaults to: `null`.
    - Enum - one of [TEXT_DIRECTION_UNSPECIFIED, LEFT_TO_RIGHT, RIGHT_TO_LEFT]
  - textFormat (TextFormat): The format of the text in the cell (unless overridden by a format run). Defaults to: `null`.
  - textRotation (TextRotation): The rotation applied to text in a cell Defaults to: `null`.
  - verticalAlignment (String.t): The vertical alignment of the value in the cell. Defaults to: `null`.
    - Enum - one of [VERTICAL_ALIGN_UNSPECIFIED, TOP, MIDDLE, BOTTOM]
  - wrapStrategy (String.t): The wrap strategy for the value in the cell. Defaults to: `null`.
    - Enum - one of [WRAP_STRATEGY_UNSPECIFIED, OVERFLOW_CELL, LEGACY_WRAP, CLIP, WRAP]
  """

  @type t :: %__MODULE__{
          backgroundColor: GoogleApi.Sheets.V4.Model.Color.t(),
          borders: GoogleApi.Sheets.V4.Model.Borders.t(),
          horizontalAlignment: any(),
          hyperlinkDisplayType: any(),
          numberFormat: GoogleApi.Sheets.V4.Model.NumberFormat.t(),
          padding: GoogleApi.Sheets.V4.Model.Padding.t(),
          textDirection: any(),
          textFormat: GoogleApi.Sheets.V4.Model.TextFormat.t(),
          textRotation: GoogleApi.Sheets.V4.Model.TextRotation.t(),
          verticalAlignment: any(),
          wrapStrategy: any()
        }

  defstruct [
    :backgroundColor,
    :borders,
    :horizontalAlignment,
    :hyperlinkDisplayType,
    :numberFormat,
    :padding,
    :textDirection,
    :textFormat,
    :textRotation,
    :verticalAlignment,
    :wrapStrategy
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.CellFormat do
  import GoogleApi.Sheets.V4.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:backgroundColor, :struct, GoogleApi.Sheets.V4.Model.Color, options)
    |> deserialize(:borders, :struct, GoogleApi.Sheets.V4.Model.Borders, options)
    |> deserialize(:numberFormat, :struct, GoogleApi.Sheets.V4.Model.NumberFormat, options)
    |> deserialize(:padding, :struct, GoogleApi.Sheets.V4.Model.Padding, options)
    |> deserialize(:textFormat, :struct, GoogleApi.Sheets.V4.Model.TextFormat, options)
    |> deserialize(:textRotation, :struct, GoogleApi.Sheets.V4.Model.TextRotation, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.CellFormat do
  def encode(value, options) do
    GoogleApi.Sheets.V4.Deserializer.serialize_non_nil(value, options)
  end
end
