# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Sheets.V4.Model.GridData do
  @moduledoc """
  Data in the grid, as well as metadata about the dimensions.

  ## Attributes

  - columnMetadata ([DimensionProperties]): Metadata about the requested columns in the grid, starting with the column in start_column. Defaults to: `null`.
  - rowData ([RowData]): The data in the grid, one entry per row, starting with the row in startRow. The values in RowData will correspond to columns starting at start_column. Defaults to: `null`.
  - rowMetadata ([DimensionProperties]): Metadata about the requested rows in the grid, starting with the row in start_row. Defaults to: `null`.
  - startColumn (integer()): The first column this GridData refers to, zero-based. Defaults to: `null`.
  - startRow (integer()): The first row this GridData refers to, zero-based. Defaults to: `null`.
  """

  @type t :: %__MODULE__{
          columnMetadata: list(GoogleApi.Sheets.V4.Model.DimensionProperties.t()),
          rowData: list(GoogleApi.Sheets.V4.Model.RowData.t()),
          rowMetadata: list(GoogleApi.Sheets.V4.Model.DimensionProperties.t()),
          startColumn: any(),
          startRow: any()
        }

  defstruct [
    :columnMetadata,
    :rowData,
    :rowMetadata,
    :startColumn,
    :startRow
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.GridData do
  import GoogleApi.Sheets.V4.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:columnMetadata, :list, GoogleApi.Sheets.V4.Model.DimensionProperties, options)
    |> deserialize(:rowData, :list, GoogleApi.Sheets.V4.Model.RowData, options)
    |> deserialize(:rowMetadata, :list, GoogleApi.Sheets.V4.Model.DimensionProperties, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.GridData do
  def encode(value, options) do
    GoogleApi.Sheets.V4.Deserializer.serialize_non_nil(value, options)
  end
end
