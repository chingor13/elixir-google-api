# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Sheets.V4.Model.BatchUpdateSpreadsheetRequest do
  @moduledoc """
  The request for updating any aspect of a spreadsheet.

  ## Attributes

  - includeSpreadsheetInResponse (boolean()): Determines if the update response should include the spreadsheet resource. Defaults to: `null`.
  - requests ([Request]): A list of updates to apply to the spreadsheet. Requests will be applied in the order they are specified. If any request is not valid, no requests will be applied. Defaults to: `null`.
  - responseIncludeGridData (boolean()): True if grid data should be returned. Meaningful only if if include_spreadsheet_in_response is &#39;true&#39;. This parameter is ignored if a field mask was set in the request. Defaults to: `null`.
  - responseRanges ([String.t]): Limits the ranges included in the response spreadsheet. Meaningful only if include_spreadsheet_response is &#39;true&#39;. Defaults to: `null`.
  """

  @type t :: %__MODULE__{
          includeSpreadsheetInResponse: any(),
          requests: list(GoogleApi.Sheets.V4.Model.Request.t()),
          responseIncludeGridData: any(),
          responseRanges: any()
        }

  defstruct [
    :includeSpreadsheetInResponse,
    :requests,
    :responseIncludeGridData,
    :responseRanges
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.BatchUpdateSpreadsheetRequest do
  import GoogleApi.Sheets.V4.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:requests, :list, GoogleApi.Sheets.V4.Model.Request, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.BatchUpdateSpreadsheetRequest do
  def encode(value, options) do
    GoogleApi.Sheets.V4.Deserializer.serialize_non_nil(value, options)
  end
end
