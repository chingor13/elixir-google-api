# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Sheets.V4.Model.DimensionGroup do
  @moduledoc """
  A group over an interval of rows or columns on a sheet, which can contain or be contained within other groups. A group can be collapsed or expanded as a unit on the sheet.

  ## Attributes

  - collapsed (boolean()): True if this group is collapsed. A collapsed group will remain collapsed if an overlapping group at a shallower depth is expanded.  collapsed &#x3D;&#x3D; true does not imply that all dimensions within the group are hidden, since a dimension&#39;s visibility can change independently from this group property. However, when this property is updated, all dimensions within it will be set to hidden if collapsed &#x3D;&#x3D; true, or set to visible if collapsed &#x3D;&#x3D; false. Defaults to: `null`.
  - depth (integer()): The depth of the group, representing how many groups have a range that wholly contains the range of this group. Defaults to: `null`.
  - range (DimensionRange): The range over which this group exists. Defaults to: `null`.
  """

  @type t :: %__MODULE__{
          collapsed: any(),
          depth: any(),
          range: GoogleApi.Sheets.V4.Model.DimensionRange.t()
        }

  defstruct [
    :collapsed,
    :depth,
    :range
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.DimensionGroup do
  import GoogleApi.Sheets.V4.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:range, :struct, GoogleApi.Sheets.V4.Model.DimensionRange, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.DimensionGroup do
  def encode(value, options) do
    GoogleApi.Sheets.V4.Deserializer.serialize_non_nil(value, options)
  end
end
