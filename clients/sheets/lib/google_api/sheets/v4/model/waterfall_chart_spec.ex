# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Sheets.V4.Model.WaterfallChartSpec do
  @moduledoc """
  A waterfall chart.

  ## Attributes

  - connectorLineStyle (LineStyle): The line style for the connector lines. Defaults to: `null`.
  - domain (WaterfallChartDomain): The domain data (horizontal axis) for the waterfall chart. Defaults to: `null`.
  - firstValueIsTotal (boolean()): True to interpret the first value as a total. Defaults to: `null`.
  - hideConnectorLines (boolean()): True to hide connector lines between columns. Defaults to: `null`.
  - series ([WaterfallChartSeries]): The data this waterfall chart is visualizing. Defaults to: `null`.
  - stackedType (String.t): The stacked type. Defaults to: `null`.
    - Enum - one of [WATERFALL_STACKED_TYPE_UNSPECIFIED, STACKED, SEQUENTIAL]
  """

  @type t :: %__MODULE__{
          connectorLineStyle: GoogleApi.Sheets.V4.Model.LineStyle.t(),
          domain: GoogleApi.Sheets.V4.Model.WaterfallChartDomain.t(),
          firstValueIsTotal: any(),
          hideConnectorLines: any(),
          series: list(GoogleApi.Sheets.V4.Model.WaterfallChartSeries.t()),
          stackedType: any()
        }

  defstruct [
    :connectorLineStyle,
    :domain,
    :firstValueIsTotal,
    :hideConnectorLines,
    :series,
    :stackedType
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Sheets.V4.Model.WaterfallChartSpec do
  import GoogleApi.Sheets.V4.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:connectorLineStyle, :struct, GoogleApi.Sheets.V4.Model.LineStyle, options)
    |> deserialize(:domain, :struct, GoogleApi.Sheets.V4.Model.WaterfallChartDomain, options)
    |> deserialize(:series, :list, GoogleApi.Sheets.V4.Model.WaterfallChartSeries, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Sheets.V4.Model.WaterfallChartSpec do
  def encode(value, options) do
    GoogleApi.Sheets.V4.Deserializer.serialize_non_nil(value, options)
  end
end
