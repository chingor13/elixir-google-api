# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Sheets.V4.Api.Spreadsheets do
  @moduledoc """
  API calls for all endpoints tagged `Spreadsheets`.
  """

  alias GoogleApi.Sheets.V4.Connection
  import GoogleApi.Sheets.V4.RequestBuilder

  @doc """
  Applies one or more updates to the spreadsheet.  Each request is validated before being applied. If any request is not valid then the entire request will fail and nothing will be applied.  Some requests have replies to give you some information about how they are applied. The replies will mirror the requests.  For example, if you applied 4 updates and the 3rd one had a reply, then the response will have 2 empty replies, the actual reply, and another empty reply, in that order.  Due to the collaborative nature of spreadsheets, it is not guaranteed that the spreadsheet will reflect exactly your changes after this completes, however it is guaranteed that the updates in the request will be applied together atomically. Your changes may be altered with respect to collaborator changes. If there are no collaborators, the spreadsheet should reflect your changes.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - spreadsheet_id (String.t): The spreadsheet to apply the updates to.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.
    - :body (BatchUpdateSpreadsheetRequest): 

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.BatchUpdateSpreadsheetResponse{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_batch_update(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Sheets.V4.Model.BatchUpdateSpreadsheetResponse.t()}
          | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_batch_update(connection, spreadsheet_id, opts \\ []) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v4/spreadsheets/{spreadsheetId}:batchUpdate", %{
      "spreadsheetId" => URI.encode_www_form(spreadsheet_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.BatchUpdateSpreadsheetResponse{})
  end

  @doc """
  Creates a spreadsheet, returning the newly created spreadsheet.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.
    - :body (Spreadsheet): 

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.Spreadsheet{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_create(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.Sheets.V4.Model.Spreadsheet.t()} | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_create(connection, opts \\ []) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v4/spreadsheets")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.Spreadsheet{})
  end

  @doc """
  Returns the developer metadata with the specified ID. The caller must specify the spreadsheet ID and the developer metadata&#39;s unique metadataId.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - spreadsheet_id (String.t): The ID of the spreadsheet to retrieve metadata from.
  - metadata_id (integer()): The ID of the developer metadata to retrieve.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.DeveloperMetadata{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_developer_metadata_get(
          Tesla.Env.client(),
          String.t(),
          integer(),
          keyword()
        ) :: {:ok, GoogleApi.Sheets.V4.Model.DeveloperMetadata.t()} | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_developer_metadata_get(
        connection,
        spreadsheet_id,
        metadata_id,
        opts \\ []
      ) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query
    }

    %{}
    |> method(:get)
    |> url("/v4/spreadsheets/{spreadsheetId}/developerMetadata/{metadataId}", %{
      "spreadsheetId" => URI.encode_www_form(spreadsheet_id),
      "metadataId" => metadata_id
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.DeveloperMetadata{})
  end

  @doc """
  Returns all developer metadata matching the specified DataFilter. If the provided DataFilter represents a DeveloperMetadataLookup object, this will return all DeveloperMetadata entries selected by it. If the DataFilter represents a location in a spreadsheet, this will return all developer metadata associated with locations intersecting that region.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - spreadsheet_id (String.t): The ID of the spreadsheet to retrieve metadata from.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.
    - :body (SearchDeveloperMetadataRequest): 

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.SearchDeveloperMetadataResponse{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_developer_metadata_search(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Sheets.V4.Model.SearchDeveloperMetadataResponse.t()}
          | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_developer_metadata_search(connection, spreadsheet_id, opts \\ []) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v4/spreadsheets/{spreadsheetId}/developerMetadata:search", %{
      "spreadsheetId" => URI.encode_www_form(spreadsheet_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.SearchDeveloperMetadataResponse{})
  end

  @doc """
  Returns the spreadsheet at the given ID. The caller must specify the spreadsheet ID.  By default, data within grids will not be returned. You can include grid data one of two ways:  * Specify a field mask listing your desired fields using the &#x60;fields&#x60; URL parameter in HTTP  * Set the includeGridData URL parameter to true.  If a field mask is set, the &#x60;includeGridData&#x60; parameter is ignored  For large spreadsheets, it is recommended to retrieve only the specific fields of the spreadsheet that you want.  To retrieve only subsets of the spreadsheet, use the ranges URL parameter. Multiple ranges can be specified.  Limiting the range will return only the portions of the spreadsheet that intersect the requested ranges. Ranges are specified using A1 notation.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - spreadsheet_id (String.t): The spreadsheet to request.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.
    - :ranges ([String.t]): The ranges to retrieve from the spreadsheet.
    - :includeGridData (boolean()): True if grid data should be returned. This parameter is ignored if a field mask was set in the request.

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.Spreadsheet{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_get(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Sheets.V4.Model.Spreadsheet.t()} | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_get(connection, spreadsheet_id, opts \\ []) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query,
      :ranges => :query,
      :includeGridData => :query
    }

    %{}
    |> method(:get)
    |> url("/v4/spreadsheets/{spreadsheetId}", %{
      "spreadsheetId" => URI.encode_www_form(spreadsheet_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.Spreadsheet{})
  end

  @doc """
  Returns the spreadsheet at the given ID. The caller must specify the spreadsheet ID.  This method differs from GetSpreadsheet in that it allows selecting which subsets of spreadsheet data to return by specifying a dataFilters parameter. Multiple DataFilters can be specified.  Specifying one or more data filters will return the portions of the spreadsheet that intersect ranges matched by any of the filters.  By default, data within grids will not be returned. You can include grid data one of two ways:  * Specify a field mask listing your desired fields using the &#x60;fields&#x60; URL parameter in HTTP  * Set the includeGridData parameter to true.  If a field mask is set, the &#x60;includeGridData&#x60; parameter is ignored  For large spreadsheets, it is recommended to retrieve only the specific fields of the spreadsheet that you want.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - spreadsheet_id (String.t): The spreadsheet to request.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.
    - :body (GetSpreadsheetByDataFilterRequest): 

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.Spreadsheet{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_get_by_data_filter(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Sheets.V4.Model.Spreadsheet.t()} | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_get_by_data_filter(connection, spreadsheet_id, opts \\ []) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v4/spreadsheets/{spreadsheetId}:getByDataFilter", %{
      "spreadsheetId" => URI.encode_www_form(spreadsheet_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.Spreadsheet{})
  end

  @doc """
  Copies a single sheet from a spreadsheet to another spreadsheet. Returns the properties of the newly created sheet.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - spreadsheet_id (String.t): The ID of the spreadsheet containing the sheet to copy.
  - sheet_id (integer()): The ID of the sheet to copy.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.
    - :body (CopySheetToAnotherSpreadsheetRequest): 

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.SheetProperties{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_sheets_copy_to(Tesla.Env.client(), String.t(), integer(), keyword()) ::
          {:ok, GoogleApi.Sheets.V4.Model.SheetProperties.t()} | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_sheets_copy_to(connection, spreadsheet_id, sheet_id, opts \\ []) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v4/spreadsheets/{spreadsheetId}/sheets/{sheetId}:copyTo", %{
      "spreadsheetId" => URI.encode_www_form(spreadsheet_id),
      "sheetId" => sheet_id
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.SheetProperties{})
  end

  @doc """
  Appends values to a spreadsheet. The input range is used to search for existing data and find a \&quot;table\&quot; within that range. Values will be appended to the next row of the table, starting with the first column of the table. See the [guide](/sheets/api/guides/values#appending_values) and [sample code](/sheets/api/samples/writing#append_values) for specific details of how tables are detected and data is appended.  The caller must specify the spreadsheet ID, range, and a valueInputOption.  The &#x60;valueInputOption&#x60; only controls how the input data will be added to the sheet (column-wise or row-wise), it does not influence what cell the data starts being written to.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - spreadsheet_id (String.t): The ID of the spreadsheet to update.
  - range (String.t): The A1 notation of a range to search for a logical table of data. Values will be appended after the last row of the table.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.
    - :includeValuesInResponse (boolean()): Determines if the update response should include the values of the cells that were appended. By default, responses do not include the updated values.
    - :responseValueRenderOption (String.t): Determines how values in the response should be rendered. The default render option is ValueRenderOption.FORMATTED_VALUE.
    - :insertDataOption (String.t): How the input data should be inserted.
    - :valueInputOption (String.t): How the input data should be interpreted.
    - :responseDateTimeRenderOption (String.t): Determines how dates, times, and durations in the response should be rendered. This is ignored if response_value_render_option is FORMATTED_VALUE. The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].
    - :body (ValueRange): 

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.AppendValuesResponse{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_values_append(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.Sheets.V4.Model.AppendValuesResponse.t()} | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_values_append(connection, spreadsheet_id, range, opts \\ []) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query,
      :includeValuesInResponse => :query,
      :responseValueRenderOption => :query,
      :insertDataOption => :query,
      :valueInputOption => :query,
      :responseDateTimeRenderOption => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v4/spreadsheets/{spreadsheetId}/values/{range}:append", %{
      "spreadsheetId" => URI.encode_www_form(spreadsheet_id),
      "range" => URI.encode_www_form(range)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.AppendValuesResponse{})
  end

  @doc """
  Clears one or more ranges of values from a spreadsheet. The caller must specify the spreadsheet ID and one or more ranges. Only values are cleared -- all other properties of the cell (such as formatting, data validation, etc..) are kept.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - spreadsheet_id (String.t): The ID of the spreadsheet to update.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.
    - :body (BatchClearValuesRequest): 

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.BatchClearValuesResponse{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_values_batch_clear(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Sheets.V4.Model.BatchClearValuesResponse.t()} | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_values_batch_clear(connection, spreadsheet_id, opts \\ []) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v4/spreadsheets/{spreadsheetId}/values:batchClear", %{
      "spreadsheetId" => URI.encode_www_form(spreadsheet_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.BatchClearValuesResponse{})
  end

  @doc """
  Clears one or more ranges of values from a spreadsheet. The caller must specify the spreadsheet ID and one or more DataFilters. Ranges matching any of the specified data filters will be cleared.  Only values are cleared -- all other properties of the cell (such as formatting, data validation, etc..) are kept.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - spreadsheet_id (String.t): The ID of the spreadsheet to update.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.
    - :body (BatchClearValuesByDataFilterRequest): 

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.BatchClearValuesByDataFilterResponse{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_values_batch_clear_by_data_filter(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.Sheets.V4.Model.BatchClearValuesByDataFilterResponse.t()}
          | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_values_batch_clear_by_data_filter(
        connection,
        spreadsheet_id,
        opts \\ []
      ) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v4/spreadsheets/{spreadsheetId}/values:batchClearByDataFilter", %{
      "spreadsheetId" => URI.encode_www_form(spreadsheet_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.BatchClearValuesByDataFilterResponse{})
  end

  @doc """
  Returns one or more ranges of values from a spreadsheet. The caller must specify the spreadsheet ID and one or more ranges.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - spreadsheet_id (String.t): The ID of the spreadsheet to retrieve data from.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.
    - :valueRenderOption (String.t): How values should be represented in the output. The default render option is ValueRenderOption.FORMATTED_VALUE.
    - :dateTimeRenderOption (String.t): How dates, times, and durations should be represented in the output. This is ignored if value_render_option is FORMATTED_VALUE. The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].
    - :ranges ([String.t]): The A1 notation of the values to retrieve.
    - :majorDimension (String.t): The major dimension that results should use.  For example, if the spreadsheet data is: &#x60;A1&#x3D;1,B1&#x3D;2,A2&#x3D;3,B2&#x3D;4&#x60;, then requesting &#x60;range&#x3D;A1:B2,majorDimension&#x3D;ROWS&#x60; will return &#x60;[[1,2],[3,4]]&#x60;, whereas requesting &#x60;range&#x3D;A1:B2,majorDimension&#x3D;COLUMNS&#x60; will return &#x60;[[1,3],[2,4]]&#x60;.

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.BatchGetValuesResponse{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_values_batch_get(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Sheets.V4.Model.BatchGetValuesResponse.t()} | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_values_batch_get(connection, spreadsheet_id, opts \\ []) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query,
      :valueRenderOption => :query,
      :dateTimeRenderOption => :query,
      :ranges => :query,
      :majorDimension => :query
    }

    %{}
    |> method(:get)
    |> url("/v4/spreadsheets/{spreadsheetId}/values:batchGet", %{
      "spreadsheetId" => URI.encode_www_form(spreadsheet_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.BatchGetValuesResponse{})
  end

  @doc """
  Returns one or more ranges of values that match the specified data filters. The caller must specify the spreadsheet ID and one or more DataFilters.  Ranges that match any of the data filters in the request will be returned.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - spreadsheet_id (String.t): The ID of the spreadsheet to retrieve data from.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.
    - :body (BatchGetValuesByDataFilterRequest): 

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.BatchGetValuesByDataFilterResponse{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_values_batch_get_by_data_filter(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.Sheets.V4.Model.BatchGetValuesByDataFilterResponse.t()}
          | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_values_batch_get_by_data_filter(connection, spreadsheet_id, opts \\ []) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v4/spreadsheets/{spreadsheetId}/values:batchGetByDataFilter", %{
      "spreadsheetId" => URI.encode_www_form(spreadsheet_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.BatchGetValuesByDataFilterResponse{})
  end

  @doc """
  Sets values in one or more ranges of a spreadsheet. The caller must specify the spreadsheet ID, a valueInputOption, and one or more ValueRanges.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - spreadsheet_id (String.t): The ID of the spreadsheet to update.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.
    - :body (BatchUpdateValuesRequest): 

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.BatchUpdateValuesResponse{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_values_batch_update(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.Sheets.V4.Model.BatchUpdateValuesResponse.t()} | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_values_batch_update(connection, spreadsheet_id, opts \\ []) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v4/spreadsheets/{spreadsheetId}/values:batchUpdate", %{
      "spreadsheetId" => URI.encode_www_form(spreadsheet_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.BatchUpdateValuesResponse{})
  end

  @doc """
  Sets values in one or more ranges of a spreadsheet. The caller must specify the spreadsheet ID, a valueInputOption, and one or more DataFilterValueRanges.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - spreadsheet_id (String.t): The ID of the spreadsheet to update.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.
    - :body (BatchUpdateValuesByDataFilterRequest): 

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.BatchUpdateValuesByDataFilterResponse{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_values_batch_update_by_data_filter(
          Tesla.Env.client(),
          String.t(),
          keyword()
        ) ::
          {:ok, GoogleApi.Sheets.V4.Model.BatchUpdateValuesByDataFilterResponse.t()}
          | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_values_batch_update_by_data_filter(
        connection,
        spreadsheet_id,
        opts \\ []
      ) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v4/spreadsheets/{spreadsheetId}/values:batchUpdateByDataFilter", %{
      "spreadsheetId" => URI.encode_www_form(spreadsheet_id)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.BatchUpdateValuesByDataFilterResponse{})
  end

  @doc """
  Clears values from a spreadsheet. The caller must specify the spreadsheet ID and range. Only values are cleared -- all other properties of the cell (such as formatting, data validation, etc..) are kept.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - spreadsheet_id (String.t): The ID of the spreadsheet to update.
  - range (String.t): The A1 notation of the values to clear.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.
    - :body (ClearValuesRequest): 

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.ClearValuesResponse{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_values_clear(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.Sheets.V4.Model.ClearValuesResponse.t()} | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_values_clear(connection, spreadsheet_id, range, opts \\ []) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/v4/spreadsheets/{spreadsheetId}/values/{range}:clear", %{
      "spreadsheetId" => URI.encode_www_form(spreadsheet_id),
      "range" => URI.encode_www_form(range)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.ClearValuesResponse{})
  end

  @doc """
  Returns a range of values from a spreadsheet. The caller must specify the spreadsheet ID and a range.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - spreadsheet_id (String.t): The ID of the spreadsheet to retrieve data from.
  - range (String.t): The A1 notation of the values to retrieve.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.
    - :majorDimension (String.t): The major dimension that results should use.  For example, if the spreadsheet data is: &#x60;A1&#x3D;1,B1&#x3D;2,A2&#x3D;3,B2&#x3D;4&#x60;, then requesting &#x60;range&#x3D;A1:B2,majorDimension&#x3D;ROWS&#x60; will return &#x60;[[1,2],[3,4]]&#x60;, whereas requesting &#x60;range&#x3D;A1:B2,majorDimension&#x3D;COLUMNS&#x60; will return &#x60;[[1,3],[2,4]]&#x60;.
    - :valueRenderOption (String.t): How values should be represented in the output. The default render option is ValueRenderOption.FORMATTED_VALUE.
    - :dateTimeRenderOption (String.t): How dates, times, and durations should be represented in the output. This is ignored if value_render_option is FORMATTED_VALUE. The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.ValueRange{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_values_get(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.Sheets.V4.Model.ValueRange.t()} | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_values_get(connection, spreadsheet_id, range, opts \\ []) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query,
      :majorDimension => :query,
      :valueRenderOption => :query,
      :dateTimeRenderOption => :query
    }

    %{}
    |> method(:get)
    |> url("/v4/spreadsheets/{spreadsheetId}/values/{range}", %{
      "spreadsheetId" => URI.encode_www_form(spreadsheet_id),
      "range" => URI.encode_www_form(range)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.ValueRange{})
  end

  @doc """
  Sets values in a range of a spreadsheet. The caller must specify the spreadsheet ID, range, and a valueInputOption.

  ## Parameters

  - connection (GoogleApi.Sheets.V4.Connection): Connection to server
  - spreadsheet_id (String.t): The ID of the spreadsheet to update.
  - range (String.t): The A1 notation of the values to update.
  - opts (KeywordList): [optional] Optional parameters
    - :upload_protocol (String.t): Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;).
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;).
    - :$.xgafv (String.t): V1 error format.
    - :callback (String.t): JSONP
    - :alt (String.t): Data format for response.
    - :access_token (String.t): OAuth access token.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
    - :pp (boolean()): Pretty-print response.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :bearer_token (String.t): OAuth bearer token.
    - :responseValueRenderOption (String.t): Determines how values in the response should be rendered. The default render option is ValueRenderOption.FORMATTED_VALUE.
    - :valueInputOption (String.t): How the input data should be interpreted.
    - :responseDateTimeRenderOption (String.t): Determines how dates, times, and durations in the response should be rendered. This is ignored if response_value_render_option is FORMATTED_VALUE. The default dateTime render option is [DateTimeRenderOption.SERIAL_NUMBER].
    - :includeValuesInResponse (boolean()): Determines if the update response should include the values of the cells that were updated. By default, responses do not include the updated values. If the range to write was larger than than the range actually written, the response will include all values in the requested range (excluding trailing empty rows and columns).
    - :body (ValueRange): 

  ## Returns

  {:ok, %GoogleApi.Sheets.V4.Model.UpdateValuesResponse{}} on success
  {:error, info} on failure
  """
  @spec sheets_spreadsheets_values_update(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.Sheets.V4.Model.UpdateValuesResponse.t()} | {:error, Tesla.Env.t()}
  def sheets_spreadsheets_values_update(connection, spreadsheet_id, range, opts \\ []) do
    optional_params = %{
      :upload_protocol => :query,
      :prettyPrint => :query,
      :fields => :query,
      :uploadType => :query,
      :"$.xgafv" => :query,
      :callback => :query,
      :alt => :query,
      :access_token => :query,
      :key => :query,
      :quotaUser => :query,
      :pp => :query,
      :oauth_token => :query,
      :bearer_token => :query,
      :responseValueRenderOption => :query,
      :valueInputOption => :query,
      :responseDateTimeRenderOption => :query,
      :includeValuesInResponse => :query,
      :body => :body
    }

    %{}
    |> method(:put)
    |> url("/v4/spreadsheets/{spreadsheetId}/values/{range}", %{
      "spreadsheetId" => URI.encode_www_form(spreadsheet_id),
      "range" => URI.encode_www_form(range)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.Sheets.V4.Model.UpdateValuesResponse{})
  end
end
