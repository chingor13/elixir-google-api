# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1WebhookResponse do
  @moduledoc """
  The response message for a webhook call.

  ## Attributes

  - followupEventInput (GoogleCloudDialogflowV2beta1EventInput): Optional. Makes the platform immediately invoke another &#x60;DetectIntent&#x60; call internally with the specified event as input. Defaults to: `null`.
  - fulfillmentMessages ([GoogleCloudDialogflowV2beta1IntentMessage]): Optional. The collection of rich messages to present to the user. This value is passed directly to &#x60;QueryResult.fulfillment_messages&#x60;. Defaults to: `null`.
  - fulfillmentText (String.t): Optional. The text to be shown on the screen. This value is passed directly to &#x60;QueryResult.fulfillment_text&#x60;. Defaults to: `null`.
  - outputContexts ([GoogleCloudDialogflowV2beta1Context]): Optional. The collection of output contexts. This value is passed directly to &#x60;QueryResult.output_contexts&#x60;. Defaults to: `null`.
  - payload (%{optional(String.t) &#x3D;&gt; String.t}): Optional. This value is passed directly to &#x60;QueryResult.webhook_payload&#x60;. See the related &#x60;fulfillment_messages[i].payload field&#x60;, which may be used as an alternative to this field.  This field can be used for Actions on Google responses. It should have a structure similar to the JSON message shown here. For more information, see [Actions on Google Webhook Format](https://developers.google.com/actions/dialogflow/webhook) &lt;pre&gt;{   \&quot;google\&quot;: {     \&quot;expectUserResponse\&quot;: true,     \&quot;richResponse\&quot;: {       \&quot;items\&quot;: [         {           \&quot;simpleResponse\&quot;: {             \&quot;textToSpeech\&quot;: \&quot;this is a simple response\&quot;           }         }       ]     }   } }&lt;/pre&gt; Defaults to: `null`.
  - source (String.t): Optional. This value is passed directly to &#x60;QueryResult.webhook_source&#x60;. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :followupEventInput =>
            GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1EventInput.t(),
          :fulfillmentMessages =>
            list(GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1IntentMessage.t()),
          :fulfillmentText => any(),
          :outputContexts =>
            list(GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1Context.t()),
          :payload => map(),
          :source => any()
        }

  field(
    :followupEventInput,
    as: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1EventInput
  )

  field(
    :fulfillmentMessages,
    as: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1IntentMessage,
    type: :list
  )

  field(:fulfillmentText)

  field(
    :outputContexts,
    as: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1Context,
    type: :list
  )

  field(:payload, type: :map)
  field(:source)
end

defimpl Poison.Decoder,
  for: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1WebhookResponse do
  def decode(value, options) do
    GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1WebhookResponse.decode(
      value,
      options
    )
  end
end

defimpl Poison.Encoder,
  for: GoogleApi.Dialogflow.V2.Model.GoogleCloudDialogflowV2beta1WebhookResponse do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
