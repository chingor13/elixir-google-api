# Copyright 2019 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Storage.V1.Model.HmacKeyMetadata do
  @moduledoc """
  JSON template to produce a JSON-style HMAC Key metadata resource.

  ## Attributes

  - accessId (String.t): The ID of the HMAC Key. Defaults to `nil`.
  - etag (String.t): HTTP 1.1 Entity tag for the HMAC key. Defaults to `nil`.
  - id (String.t): The ID of the HMAC key, including the Project ID and the Access ID. Defaults to `nil`.
  - kind (String.t): The kind of item this is. For HMAC Key metadata, this is always storage#hmacKeyMetadata. Defaults to `storage#hmacKeyMetadata`.
  - projectId (String.t): Project ID owning the service account to which the key authenticates. Defaults to `nil`.
  - selfLink (String.t): The link to this resource. Defaults to `nil`.
  - serviceAccountEmail (String.t): The email address of the key's associated service account. Defaults to `nil`.
  - state (String.t): The state of the key. Can be one of ACTIVE, INACTIVE, or DELETED. Defaults to `nil`.
  - timeCreated (DateTime.t): The creation time of the HMAC key in RFC 3339 format. Defaults to `nil`.
  - updated (DateTime.t): The last modification time of the HMAC key metadata in RFC 3339 format. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :accessId => String.t(),
          :etag => String.t(),
          :id => String.t(),
          :kind => String.t(),
          :projectId => String.t(),
          :selfLink => String.t(),
          :serviceAccountEmail => String.t(),
          :state => String.t(),
          :timeCreated => DateTime.t(),
          :updated => DateTime.t()
        }

  field(:accessId)
  field(:etag)
  field(:id)
  field(:kind)
  field(:projectId)
  field(:selfLink)
  field(:serviceAccountEmail)
  field(:state)
  field(:timeCreated, as: DateTime)
  field(:updated, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Storage.V1.Model.HmacKeyMetadata do
  def decode(value, options) do
    GoogleApi.Storage.V1.Model.HmacKeyMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Storage.V1.Model.HmacKeyMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
