# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudTasks.V2beta2.Model.AppEngineHttpRequest do
  @moduledoc """
  App Engine HTTP request.  The message defines the HTTP request that is sent to an App Engine app when the task is dispatched.  This proto can only be used for tasks in a queue which has app_engine_http_target set.  Using AppEngineHttpRequest requires [&#x60;appengine.applications.get&#x60;](/appengine/docs/admin-api/access-control) Google IAM permission for the project and the following scope:  &#x60;https://www.googleapis.com/auth/cloud-platform&#x60;  The task will be delivered to the App Engine app which belongs to the same project as the queue. For more information, see [How Requests are Routed](/appengine/docs/standard/python/how-requests-are-routed) and how routing is affected by [dispatch files](/appengine/docs/python/config/dispatchref).  The AppEngineRouting used to construct the URL that the task is delivered to can be set at the queue-level or task-level:  * If set,    app_engine_routing_override    is used for all tasks in the queue, no matter what the setting    is for the    task-level app_engine_routing.   The &#x60;url&#x60; that the task will be sent to is:  * &#x60;url &#x3D;&#x60; host &#x60;+&#x60;   relative_url  The task attempt has succeeded if the app&#39;s request handler returns an HTTP response code in the range [&#x60;200&#x60; - &#x60;299&#x60;]. &#x60;503&#x60; is considered an App Engine system error instead of an application error. Requests returning error &#x60;503&#x60; will be retried regardless of retry configuration and not counted against retry counts. Any other response code or a failure to receive a response before the deadline is a failed attempt.

  ## Attributes

  - appEngineRouting (AppEngineRouting): Task-level setting for App Engine routing.  If set, app_engine_routing_override is used for all tasks in the queue, no matter what the setting is for the task-level app_engine_routing. Defaults to: `null`.
  - headers (%{optional(String.t) &#x3D;&gt; String.t}): HTTP request headers.  This map contains the header field names and values. Headers can be set when the [task is created](google.cloud.tasks.v2beta2.CloudTasks.CreateTask). Repeated headers are not supported but a header value can contain commas.  Cloud Tasks sets some headers to default values:  * &#x60;User-Agent&#x60;: By default, this header is   &#x60;\&quot;AppEngine-Google; (+http://code.google.com/appengine)\&quot;&#x60;.   This header can be modified, but Cloud Tasks will append   &#x60;\&quot;AppEngine-Google; (+http://code.google.com/appengine)\&quot;&#x60; to the   modified &#x60;User-Agent&#x60;.  If the task has a payload, Cloud Tasks sets the following headers:  * &#x60;Content-Type&#x60;: By default, the &#x60;Content-Type&#x60; header is set to   &#x60;\&quot;application/octet-stream\&quot;&#x60;. The default can be overridden by explicitly   setting &#x60;Content-Type&#x60; to a particular media type when the   [task is created](google.cloud.tasks.v2beta2.CloudTasks.CreateTask).   For example, &#x60;Content-Type&#x60; can be set to &#x60;\&quot;application/json\&quot;&#x60;. * &#x60;Content-Length&#x60;: This is computed by Cloud Tasks. This value is   output only.   It cannot be changed.  The headers below cannot be set or overridden:  * &#x60;Host&#x60; * &#x60;X-Google-*&#x60; * &#x60;X-AppEngine-*&#x60;  In addition, Cloud Tasks sets some headers when the task is dispatched, such as headers containing information about the task; see [request headers](/appengine/docs/python/taskqueue/push/creating-handlers#reading_request_headers). These headers are set only when the task is dispatched, so they are not visible when the task is returned in a Cloud Tasks response.  Although there is no specific limit for the maximum number of headers or the size, there is a limit on the maximum size of the Task. For more information, see the CreateTask documentation. Defaults to: `null`.
  - httpMethod (String.t): The HTTP method to use for the request. The default is POST.  The app&#39;s request handler for the task&#39;s target URL must be able to handle HTTP requests with this http_method, otherwise the task attempt will fail with error code 405 (Method Not Allowed). See [Writing a push task request handler](/appengine/docs/java/taskqueue/push/creating-handlers#writing_a_push_task_request_handler) and the documentation for the request handlers in the language your app is written in e.g. [Python Request Handler](/appengine/docs/python/tools/webapp/requesthandlerclass). Defaults to: `null`.
    - Enum - one of [HTTP_METHOD_UNSPECIFIED, POST, GET, HEAD, PUT, DELETE]
  - payload (binary()): Payload.  The payload will be sent as the HTTP message body. A message body, and thus a payload, is allowed only if the HTTP method is POST or PUT. It is an error to set a data payload on a task with an incompatible HttpMethod. Defaults to: `null`.
  - relativeUrl (String.t): The relative URL.  The relative URL must begin with \&quot;/\&quot; and must be a valid HTTP relative URL. It can contain a path and query string arguments. If the relative URL is empty, then the root path \&quot;/\&quot; will be used. No spaces are allowed, and the maximum length allowed is 2083 characters. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :appEngineRouting => GoogleApi.CloudTasks.V2beta2.Model.AppEngineRouting.t(),
          :headers => map(),
          :httpMethod => any(),
          :payload => any(),
          :relativeUrl => any()
        }

  field(:appEngineRouting, as: GoogleApi.CloudTasks.V2beta2.Model.AppEngineRouting)
  field(:headers, type: :map)
  field(:httpMethod)
  field(:payload)
  field(:relativeUrl)
end

defimpl Poison.Decoder, for: GoogleApi.CloudTasks.V2beta2.Model.AppEngineHttpRequest do
  def decode(value, options) do
    GoogleApi.CloudTasks.V2beta2.Model.AppEngineHttpRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudTasks.V2beta2.Model.AppEngineHttpRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
