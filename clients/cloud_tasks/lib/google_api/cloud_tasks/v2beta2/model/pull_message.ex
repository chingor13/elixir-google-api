# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudTasks.V2beta2.Model.PullMessage do
  @moduledoc """
  The pull message contains data that can be used by the caller of LeaseTasks to process the task.  This proto can only be used for tasks in a queue which has pull_target set.

  ## Attributes

  - payload (binary()): A data payload consumed by the worker to execute the task. Defaults to: `null`.
  - tag (String.t): The task&#39;s tag.  Tags allow similar tasks to be processed in a batch. If you label tasks with a tag, your worker can lease tasks with the same tag using filter. For example, if you want to aggregate the events associated with a specific user once a day, you could tag tasks with the user ID.  The task&#39;s tag can only be set when the task is created.  The tag must be less than 500 characters.  SDK compatibility: Although the SDK allows tags to be either string or [bytes](/appengine/docs/standard/java/javadoc/com/google/appengine/api/taskqueue/TaskOptions.html#tag-byte:A-), only UTF-8 encoded tags can be used in Cloud Tasks. If a tag isn&#39;t UTF-8 encoded, the tag will be empty when the task is returned by Cloud Tasks. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :payload => any(),
          :tag => any()
        }

  field(:payload)
  field(:tag)
end

defimpl Poison.Decoder, for: GoogleApi.CloudTasks.V2beta2.Model.PullMessage do
  def decode(value, options) do
    GoogleApi.CloudTasks.V2beta2.Model.PullMessage.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudTasks.V2beta2.Model.PullMessage do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
