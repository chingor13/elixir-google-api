# Copyright 2019 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2OutputStorageConfig do
  @moduledoc """
  Cloud repository for storing output.

  ## Attributes

  - outputSchema (String.t): Schema used for writing the findings for Inspect jobs. This field is only
  used for Inspect and must be unspecified for Risk jobs. Columns are derived
  from the `Finding` object. If appending to an existing table, any columns
  from the predefined schema that are missing will be added. No columns in
  the existing table will be deleted.

  If unspecified, then all available columns will be used for a new table or
  an (existing) table with no schema, and no changes will be made to an
  existing table that has a schema. Defaults to `nil`.
  - table (GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2BigQueryTable.t): Store findings in an existing table or a new table in an existing
  dataset. If table_id is not set a new one will be generated
  for you with the following format:
  dlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific timezone will be used for
  generating the date details.

  For Inspect, each column in an existing output table must have the same
  name, type, and mode of a field in the `Finding` object.

  For Risk, an existing output table should be the output of a previous
  Risk analysis job run on the same source table, with the same privacy
  metric and quasi-identifiers. Risk jobs that analyze the same table but
  compute a different privacy metric, or use different sets of
  quasi-identifiers, cannot store their results in the same table. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :outputSchema => String.t(),
          :table => GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2BigQueryTable.t()
        }

  field(:outputSchema)
  field(:table, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2BigQueryTable)
end

defimpl Poison.Decoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2OutputStorageConfig do
  def decode(value, options) do
    GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2OutputStorageConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2OutputStorageConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
