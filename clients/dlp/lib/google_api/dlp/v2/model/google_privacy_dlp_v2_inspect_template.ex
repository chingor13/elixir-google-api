# Copyright 2019 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2InspectTemplate do
  @moduledoc """
  The inspectTemplate contains a configuration (set of types of sensitive data
  to be detected) to be used anywhere you otherwise would normally specify
  InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates
  to learn more.

  ## Attributes

  - createTime (DateTime.t): The creation timestamp of a inspectTemplate, output only field. Defaults to `nil`.
  - description (String.t): Short description (max 256 chars). Defaults to `nil`.
  - displayName (String.t): Display name (max 256 chars). Defaults to `nil`.
  - inspectConfig (GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2InspectConfig.t): The core content of the template. Configuration of the scanning process. Defaults to `nil`.
  - name (String.t): The template name. Output only.

  The template will have one of the following formats:
  `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR
  `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID` Defaults to `nil`.
  - updateTime (DateTime.t): The last update timestamp of a inspectTemplate, output only field. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t(),
          :description => String.t(),
          :displayName => String.t(),
          :inspectConfig => GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2InspectConfig.t(),
          :name => String.t(),
          :updateTime => DateTime.t()
        }

  field(:createTime, as: DateTime)
  field(:description)
  field(:displayName)
  field(:inspectConfig, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2InspectConfig)
  field(:name)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2InspectTemplate do
  def decode(value, options) do
    GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2InspectTemplate.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2InspectTemplate do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
