# Copyright 2019 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2RiskAnalysisJobConfig do
  @moduledoc """
  Configuration for a risk analysis job. See
  https://cloud.google.com/dlp/docs/concepts-risk-analysis to learn more.

  ## Attributes

  - actions (list(GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Action.t)): Actions to execute at the completion of the job. Are executed in the order
  provided. Defaults to `nil`.
  - privacyMetric (GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2PrivacyMetric.t): Privacy metric to compute. Defaults to `nil`.
  - sourceTable (GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2BigQueryTable.t): Input dataset to compute metrics over. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :actions => list(GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Action.t()),
          :privacyMetric => GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2PrivacyMetric.t(),
          :sourceTable => GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2BigQueryTable.t()
        }

  field(:actions, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Action, type: :list)
  field(:privacyMetric, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2PrivacyMetric)
  field(:sourceTable, as: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2BigQueryTable)
end

defimpl Poison.Decoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2RiskAnalysisJobConfig do
  def decode(value, options) do
    GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2RiskAnalysisJobConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2RiskAnalysisJobConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
