# Copyright 2019 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Value do
  @moduledoc """
  Set of primitive values supported by the system.
  Note that for the purposes of inspection or transformation, the number
  of bytes considered to comprise a 'Value' is based on its representation
  as a UTF-8 encoded string. For example, if 'integer_value' is set to
  123456789, the number of bytes would be counted as 9, even though an
  int64 only holds up to 8 bytes of data.

  ## Attributes

  - booleanValue (boolean()):  Defaults to `nil`.
  - dateValue (GoogleApi.DLP.V2.Model.GoogleTypeDate.t):  Defaults to `nil`.
  - dayOfWeekValue (String.t):  Defaults to `nil`.
  - floatValue (float()):  Defaults to `nil`.
  - integerValue (String.t):  Defaults to `nil`.
  - stringValue (String.t):  Defaults to `nil`.
  - timeValue (GoogleApi.DLP.V2.Model.GoogleTypeTimeOfDay.t):  Defaults to `nil`.
  - timestampValue (DateTime.t):  Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :booleanValue => boolean(),
          :dateValue => GoogleApi.DLP.V2.Model.GoogleTypeDate.t(),
          :dayOfWeekValue => String.t(),
          :floatValue => float(),
          :integerValue => String.t(),
          :stringValue => String.t(),
          :timeValue => GoogleApi.DLP.V2.Model.GoogleTypeTimeOfDay.t(),
          :timestampValue => DateTime.t()
        }

  field(:booleanValue)
  field(:dateValue, as: GoogleApi.DLP.V2.Model.GoogleTypeDate)
  field(:dayOfWeekValue)
  field(:floatValue)
  field(:integerValue)
  field(:stringValue)
  field(:timeValue, as: GoogleApi.DLP.V2.Model.GoogleTypeTimeOfDay)
  field(:timestampValue, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Value do
  def decode(value, options) do
    GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Value.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.DLP.V2.Model.GooglePrivacyDlpV2Value do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
