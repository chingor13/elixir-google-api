# Copyright 2019 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Books.V1.Model.Notification do
  @moduledoc """


  ## Attributes

  - body (String.t):  Defaults to `nil`.
  - crmExperimentIds (list(String.t)): The list of crm experiment ids. Defaults to `nil`.
  - doc_id (String.t):  Defaults to `nil`.
  - doc_type (String.t):  Defaults to `nil`.
  - dont_show_notification (boolean()):  Defaults to `nil`.
  - iconUrl (String.t):  Defaults to `nil`.
  - is_document_mature (boolean()):  Defaults to `nil`.
  - kind (String.t): Resource type. Defaults to `books#notification`.
  - notificationGroup (String.t):  Defaults to `nil`.
  - notification_type (String.t):  Defaults to `nil`.
  - pcampaign_id (String.t):  Defaults to `nil`.
  - reason (String.t):  Defaults to `nil`.
  - show_notification_settings_action (boolean()):  Defaults to `nil`.
  - targetUrl (String.t):  Defaults to `nil`.
  - timeToExpireMs (String.t):  Defaults to `nil`.
  - title (String.t):  Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :body => String.t(),
          :crmExperimentIds => list(String.t()),
          :doc_id => String.t(),
          :doc_type => String.t(),
          :dont_show_notification => boolean(),
          :iconUrl => String.t(),
          :is_document_mature => boolean(),
          :kind => String.t(),
          :notificationGroup => String.t(),
          :notification_type => String.t(),
          :pcampaign_id => String.t(),
          :reason => String.t(),
          :show_notification_settings_action => boolean(),
          :targetUrl => String.t(),
          :timeToExpireMs => String.t(),
          :title => String.t()
        }

  field(:body)
  field(:crmExperimentIds, type: :list)
  field(:doc_id)
  field(:doc_type)
  field(:dont_show_notification)
  field(:iconUrl)
  field(:is_document_mature)
  field(:kind)
  field(:notificationGroup)
  field(:notification_type)
  field(:pcampaign_id)
  field(:reason)
  field(:show_notification_settings_action)
  field(:targetUrl)
  field(:timeToExpireMs)
  field(:title)
end

defimpl Poison.Decoder, for: GoogleApi.Books.V1.Model.Notification do
  def decode(value, options) do
    GoogleApi.Books.V1.Model.Notification.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Books.V1.Model.Notification do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
