# Copyright 2018 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Books.V1.Api.Familysharing do
  @moduledoc """
  API calls for all endpoints tagged `Familysharing`.
  """

  alias GoogleApi.Books.V1.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Gets information regarding the family that the user is part of.

  ## Parameters

  - connection (GoogleApi.Books.V1.Connection): Connection to server
    - optional_params (keyword()): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :source (String.t): String to identify the originator of this request.

  ## Returns

  {:ok, %GoogleApi.Books.V1.Model.FamilyInfo{}} on success
  {:error, info} on failure
  """
  @spec books_familysharing_get_family_info(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.Books.V1.Model.FamilyInfo.t()} | {:error, Tesla.Env.t()}
  def books_familysharing_get_family_info(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :source => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/familysharing/getFamilyInfo", %{})
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [struct: %GoogleApi.Books.V1.Model.FamilyInfo{}])
  end

  @doc """
  Initiates sharing of the content with the user's family. Empty response indicates success.

  ## Parameters

  - connection (GoogleApi.Books.V1.Connection): Connection to server
    - optional_params (keyword()): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :docId (String.t): The docid to share.
    - :source (String.t): String to identify the originator of this request.
    - :volumeId (String.t): The volume to share.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec books_familysharing_share(Tesla.Env.client(), keyword()) ::
          {:ok} | {:error, Tesla.Env.t()}
  def books_familysharing_share(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :docId => :query,
      :source => :query,
      :volumeId => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/familysharing/share", %{})
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [decode: false])
  end

  @doc """
  Initiates revoking content that has already been shared with the user's family. Empty response indicates success.

  ## Parameters

  - connection (GoogleApi.Books.V1.Connection): Connection to server
    - optional_params (keyword()): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :docId (String.t): The docid to unshare.
    - :source (String.t): String to identify the originator of this request.
    - :volumeId (String.t): The volume to unshare.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec books_familysharing_unshare(Tesla.Env.client(), keyword()) ::
          {:ok} | {:error, Tesla.Env.t()}
  def books_familysharing_unshare(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :docId => :query,
      :source => :query,
      :volumeId => :query
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/familysharing/unshare", %{})
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(opts ++ [decode: false])
  end
end
