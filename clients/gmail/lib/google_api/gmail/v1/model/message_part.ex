# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Gmail.V1.Model.MessagePart do
  @moduledoc """
  A single MIME message part.

  ## Attributes

  - body (MessagePartBody): The message part body for this part, which may be empty for container MIME message parts. Defaults to: `null`.
  - filename (String.t): The filename of the attachment. Only present if this message part represents an attachment. Defaults to: `null`.
  - headers ([MessagePartHeader]): List of headers on this message part. For the top-level message part, representing the entire message payload, it will contain the standard RFC 2822 email headers such as To, From, and Subject. Defaults to: `null`.
  - mimeType (String.t): The MIME type of the message part. Defaults to: `null`.
  - partId (String.t): The immutable ID of the message part. Defaults to: `null`.
  - parts ([MessagePart]): The child MIME message parts of this part. This only applies to container MIME message parts, for example multipart/*. For non- container MIME message part types, such as text/plain, this field is empty. For more information, see RFC 1521. Defaults to: `null`.
  """

  defstruct [
    :body,
    :filename,
    :headers,
    :mimeType,
    :partId,
    :parts
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Gmail.V1.Model.MessagePart do
  import GoogleApi.Gmail.V1.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:body, :struct, GoogleApi.Gmail.V1.Model.MessagePartBody, options)
    |> deserialize(:headers, :list, GoogleApi.Gmail.V1.Model.MessagePartHeader, options)
    |> deserialize(:parts, :list, GoogleApi.Gmail.V1.Model.MessagePart, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Gmail.V1.Model.MessagePart do
  def encode(value, options) do
    GoogleApi.Gmail.V1.Deserializer.serialize_non_nil(value, options)
  end
end
