# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.CloudIot.V1.Model.DeviceRegistry do
  @moduledoc """
  A container for a group of devices.

  ## Attributes

  - credentials ([RegistryCredential]): The credentials used to verify the device credentials. No more than 10 credentials can be bound to a single registry at a time. The verification process occurs at the time of device creation or update. If this field is empty, no verification is performed. Otherwise, the credentials of a newly created device or added credentials of an updated device should be signed with one of these registry credentials.  Note, however, that existing devices will never be affected by modifications to this list of credentials: after a device has been successfully created in a registry, it should be able to connect even if its registry credentials are revoked, deleted, or modified. Defaults to: `null`.
  - eventNotificationConfigs ([EventNotificationConfig]): The configuration for notification of telemetry events received from the device. All telemetry events that were successfully published by the device and acknowledged by Cloud IoT Core are guaranteed to be delivered to Cloud Pub/Sub. If multiple configurations match a message, only the first matching configuration is used. If you try to publish a device telemetry event using MQTT without specifying a Cloud Pub/Sub topic for the device&#39;s registry, the connection closes automatically. If you try to do so using an HTTP connection, an error is returned. Up to 10 configurations may be provided. Defaults to: `null`.
  - httpConfig (HttpConfig): The DeviceService (HTTP) configuration for this device registry. Defaults to: `null`.
  - id (String.t): The identifier of this device registry. For example, &#x60;myRegistry&#x60;. Defaults to: `null`.
  - mqttConfig (MqttConfig): The MQTT configuration for this device registry. Defaults to: `null`.
  - name (String.t): The resource path name. For example, &#x60;projects/example-project/locations/us-central1/registries/my-registry&#x60;. Defaults to: `null`.
  - stateNotificationConfig (StateNotificationConfig): The configuration for notification of new states received from the device. State updates are guaranteed to be stored in the state history, but notifications to Cloud Pub/Sub are not guaranteed. For example, if permissions are misconfigured or the specified topic doesn&#39;t exist, no notification will be published but the state will still be stored in Cloud IoT Core. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :credentials => list(GoogleApi.CloudIot.V1.Model.RegistryCredential.t()),
          :eventNotificationConfigs =>
            list(GoogleApi.CloudIot.V1.Model.EventNotificationConfig.t()),
          :httpConfig => GoogleApi.CloudIot.V1.Model.HttpConfig.t(),
          :id => any(),
          :mqttConfig => GoogleApi.CloudIot.V1.Model.MqttConfig.t(),
          :name => any(),
          :stateNotificationConfig => GoogleApi.CloudIot.V1.Model.StateNotificationConfig.t()
        }

  field(:credentials, as: GoogleApi.CloudIot.V1.Model.RegistryCredential, type: :list)

  field(
    :eventNotificationConfigs,
    as: GoogleApi.CloudIot.V1.Model.EventNotificationConfig,
    type: :list
  )

  field(:httpConfig, as: GoogleApi.CloudIot.V1.Model.HttpConfig)
  field(:id)
  field(:mqttConfig, as: GoogleApi.CloudIot.V1.Model.MqttConfig)
  field(:name)
  field(:stateNotificationConfig, as: GoogleApi.CloudIot.V1.Model.StateNotificationConfig)
end

defimpl Poison.Decoder, for: GoogleApi.CloudIot.V1.Model.DeviceRegistry do
  def decode(value, options) do
    GoogleApi.CloudIot.V1.Model.DeviceRegistry.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.CloudIot.V1.Model.DeviceRegistry do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
