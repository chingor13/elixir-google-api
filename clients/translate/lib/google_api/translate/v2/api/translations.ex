# Copyright 2019 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Translate.V2.Api.Translations do
  @moduledoc """
  API calls for all endpoints tagged `Translations`.
  """

  alias GoogleApi.Translate.V2.Connection
  alias GoogleApi.Gax.{Request, Response}

  @doc """
  Translates input text, returning translated text.

  ## Parameters

  - connection (GoogleApi.Translate.V2.Connection): Connection to server
  - q (list(String.t)): The input text to translate. Repeat this parameter to perform translation
  operations on multiple text inputs.
  - target (String.t): The language to use for translation of the input text, set to one of the
  language codes listed in Language Support.
  - optional_params (keyword()): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :bearer_token (String.t): OAuth bearer token.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :pp (boolean()): Pretty-print response.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. "media", "multipart").
    - :upload_protocol (String.t): Upload protocol for media (e.g. "raw", "multipart").
    - :cid (list(String.t)): The customization id for translate
    - :format (String.t): The format of the source text, in either HTML (default) or plain-text. A
  value of "html" indicates HTML and a value of "text" indicates plain-text.
    - :model (String.t): The `model` type requested for this translation. Valid values are
  listed in public documentation.
    - :source (String.t): The language of the source text, set to one of the language codes listed in
  Language Support. If the source language is not specified, the API will
  attempt to identify the source language automatically and return it within
  the response.

  ## Returns

  {:ok, %GoogleApi.Translate.V2.Model.TranslationsListResponse{}} on success
  {:error, info} on failure
  """
  @spec language_translations_list(Tesla.Env.client(), list(String.t()), String.t(), keyword()) ::
          {:ok, GoogleApi.Translate.V2.Model.TranslationsListResponse.t()}
          | {:error, Tesla.Env.t()}
  def language_translations_list(connection, q, target, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :bearer_token => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :pp => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :uploadType => :query,
      :upload_protocol => :query,
      :cid => :query,
      :format => :query,
      :model => :query,
      :source => :query
    }

    request =
      Request.new()
      |> Request.method(:get)
      |> Request.url("/v2", %{})
      |> Request.add_param(:query, :q, q)
      |> Request.add_param(:query, :target, target)
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++
        [struct: %GoogleApi.Translate.V2.Model.TranslationsListResponse{}, data_wrapped: true]
    )
  end

  @doc """
  Translates input text, returning translated text.

  ## Parameters

  - connection (GoogleApi.Translate.V2.Connection): Connection to server
  - optional_params (keyword()): [optional] Optional parameters
    - :$.xgafv (String.t): V1 error format.
    - :access_token (String.t): OAuth access token.
    - :alt (String.t): Data format for response.
    - :bearer_token (String.t): OAuth bearer token.
    - :callback (String.t): JSONP
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :pp (boolean()): Pretty-print response.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.
    - :uploadType (String.t): Legacy upload protocol for media (e.g. "media", "multipart").
    - :upload_protocol (String.t): Upload protocol for media (e.g. "raw", "multipart").
    - :body (GoogleApi.Translate.V2.Model.TranslateTextRequest.t): 

  ## Returns

  {:ok, %GoogleApi.Translate.V2.Model.TranslationsListResponse{}} on success
  {:error, info} on failure
  """
  @spec language_translations_translate(Tesla.Env.client(), keyword()) ::
          {:ok, GoogleApi.Translate.V2.Model.TranslationsListResponse.t()}
          | {:error, Tesla.Env.t()}
  def language_translations_translate(connection, optional_params \\ [], opts \\ []) do
    optional_params_config = %{
      :"$.xgafv" => :query,
      :access_token => :query,
      :alt => :query,
      :bearer_token => :query,
      :callback => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :pp => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :uploadType => :query,
      :upload_protocol => :query,
      :body => :body
    }

    request =
      Request.new()
      |> Request.method(:post)
      |> Request.url("/v2", %{})
      |> Request.add_optional_params(optional_params_config, optional_params)

    connection
    |> Connection.execute(request)
    |> Response.decode(
      opts ++
        [struct: %GoogleApi.Translate.V2.Model.TranslationsListResponse{}, data_wrapped: true]
    )
  end
end
