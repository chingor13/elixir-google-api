# Copyright 2019 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.Translate.V2.Model.TranslationsResource do
  @moduledoc """


  ## Attributes

  - detectedSourceLanguage (String.t): The source language of the initial request, detected automatically, if
  no source language was passed within the initial request. If the
  source language was passed, auto-detection of the language will not
  occur and this field will be empty. Defaults to `nil`.
  - model (String.t): The `model` type used for this translation. Valid values are
  listed in public documentation. Can be different from requested `model`.
  Present only if specific model type was explicitly requested. Defaults to `nil`.
  - translatedText (String.t): Text translated into the target language. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :detectedSourceLanguage => String.t(),
          :model => String.t(),
          :translatedText => String.t()
        }

  field(:detectedSourceLanguage)
  field(:model)
  field(:translatedText)
end

defimpl Poison.Decoder, for: GoogleApi.Translate.V2.Model.TranslationsResource do
  def decode(value, options) do
    GoogleApi.Translate.V2.Model.TranslationsResource.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Translate.V2.Model.TranslationsResource do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
