# Copyright 2019 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the elixir code generator program.
# Do not edit the class manually.

defmodule GoogleApi.AndroidManagement.V1.Model.KeyedAppState do
  @moduledoc """
  Keyed app state reported by the app.

  ## Attributes

  - createTime (DateTime.t): The creation time of the app state on the device. Defaults to `nil`.
  - data (String.t): Optionally, a machine-readable value to be read by the EMM. For example, setting values that the admin can choose to query against in the EMM console (e.g. “notify me if the battery_warning data < 10”). Defaults to `nil`.
  - key (String.t): The key for the app state. Acts as a point of reference for what the app is providing state for. For example, when providing managed configuration feedback, this key could be the managed configuration key. Defaults to `nil`.
  - lastUpdateTime (DateTime.t): The time the app state was most recently updated. Defaults to `nil`.
  - message (String.t): Optionally, a free-form message string to explain the app state. If the state was triggered by a particular value (e.g. a managed configuration value), it should be included in the message. Defaults to `nil`.
  - severity (String.t): The severity of the app state. Defaults to `nil`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :createTime => DateTime.t(),
          :data => String.t(),
          :key => String.t(),
          :lastUpdateTime => DateTime.t(),
          :message => String.t(),
          :severity => String.t()
        }

  field(:createTime, as: DateTime)
  field(:data)
  field(:key)
  field(:lastUpdateTime, as: DateTime)
  field(:message)
  field(:severity)
end

defimpl Poison.Decoder, for: GoogleApi.AndroidManagement.V1.Model.KeyedAppState do
  def decode(value, options) do
    GoogleApi.AndroidManagement.V1.Model.KeyedAppState.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.AndroidManagement.V1.Model.KeyedAppState do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
